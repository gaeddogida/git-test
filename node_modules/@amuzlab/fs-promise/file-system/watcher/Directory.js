'use strict'

const path = require('path')

class Directory extends require('./AbstractFile') {
    constructor (filePath, fileName, stat, relativePath) {
        super(filePath, fileName, stat, relativePath)

        Object.defineProperties(
            this,
            {
                files: {
                    enumerable: true,
                    value: new Map()
                }
            })
    }

    get dirName () {
        return this.fileName
    }

    get isDirectory () {
        return true
    }

    addFile (file) {
        let _file

        if (file) {
            _file = this.getFile(file.filePath, file.fileName)

            return _file ? _file.change() : this.files.set(file.fullPath, file)
        } else {
            throw new Error(`file parameter is not exist file (file : ${file})`)
        }
    }

    getFile (filePath, fileName) {
        return this.files.get(path.join(filePath, fileName))
    }

    removeFile (filePath, fileName) {
        return this.files.delete(path.join(filePath, fileName))
    }

    clear () {
        this.files.forEach(file => file.clear())
        return this.files.clear()
    }
}

module.exports = exports = Directory
