'use strict'

class Store {
    constructor () {
        Object.defineProperties(
            this,
            {
                _watchers: {
                    value: new Map()
                }
            })
    }

    add (watcher) {
        if (watcher) {
            if (this._watchers.has(watcher.targetPath)) {
                throw new Error(`duplicate Watcher (targetPath : ${watcher.targetPath})`)
            } else {
                this._watchers.set(watcher.targetPath, watcher)
            }
        } else {
            throw new Error(`watcher parameter is not exist (watcher : ${watcher})`)
        }
    }

    close (targetPath) {
        let watcher = this._watchers.get(targetPath)

        if (watcher) {
            watcher.close()
            this._watchers.delete(targetPath)
            return watcher
        } else {
            throw new Error(`does not exist watcher (targetPath : ${targetPath})`)
        }
    }
}

module.exports = exports = new Store()
