'use strict'

/** class definition **/
/**
 * @class       Timer
 * @classdesc   Timer wrapping class
 * @extends     EventEmitter
 * @param       {Timer=}        timer      Timer class
 * @since       1.1.0
 * @see {@link https://nodejs.org/docs/latest-v12.x/api/timers.html timer}
*/
class Timer extends require('events') {
    constructor (timer) {
        super()

        Object.defineProperties(
            this,
            {
                _timer: {
                    writable: true,
                    value: timer
                }
            })
    }

    get timer () {
        return this._timer
    }

    clearTimeout () {
        clearTimeout(this.timer)
        this._timer = null
        this.emit('clear', this)
    }

    clearInterval () {
        clearInterval(this.timer)
        this._timer = null
        this.emit('clear', this)
    }

    clearImmediate () {
        clearImmediate(this.timer)
        this._timer = null
        this.emit('clear', this)
    }

    static setTimeout (...args) {
        return new Timer(setTimeout(...args))
    }

    static setInterval (...args) {
        return new Timer(setInterval(...args))
    }

    static setImmediate (...args) {
        return new Timer(setImmediate(...args))
    }

    static clearTimeout (timer) {
        timer && timer.clearTimeout()
    }

    static clearInterval (timer) {
        timer && timer.clearInterval()
    }

    static clearImmediate (timer) {
        timer && timer.clearImmediate()
    }
}

module.exports = exports = Timer
