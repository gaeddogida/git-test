'use strict'

const util = require('./util'),
    objUtil = require('./object')

objUtil.defineProperties(
    exports,
    {
        isEnumFunc: key => {
            const funcs = ['getKey', 'getValue']

            return new RegExp(`(${funcs.join('|')})`).test(key)
        },
        from: data => {
            return data && typeof data === 'object' ? objUtil.defineProperties(
                objUtil.defineProperties({}, data, {enumerable: true}),
                {
                    getKey: value => exports.getKey(this, value),
                    getValue: key => exports.getValue(this, key)
                }) : data
        },
        getKey: (_enum, value) => {
            const isValueFn = typeof value === 'function'
            let result

            return result = util.find(
                _enum,
                (v, k, _enum) => !exports.isEnumFunc(k) && (isValueFn ? value(v, k, _enum) : v === value),
                (v, k) => k),
                result === null || result === undefined ? '' : result
        },
        getValue: (_enum, key) => {
            const isKeyFn = typeof key === 'function'
            let result

            return result = util.find(
                _enum,
                (v, k, _enum) => !exports.isEnumFunc(k) && (isKeyFn ? key(v, k, _enum) : k == key)),
                result === null || result === undefined ? '' : result
        }
    },
    {
        enumerable: true
    })
